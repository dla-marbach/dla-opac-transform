# Für den Export in Literaturverwaltungsprogramme wird ein RIS-Datensatz generiert.
# Werktitel werden ausgelassen.
- op: core/column-addition
  engineConfig:
    facets:
      - type: list
        expression: value
        columnName: category
        invert: true
        selection:
          - v:
              v: Werktitel
    mode: row-based
  baseColumnName: id
  expression: |
    grel:
    'TY  - ' + 'GEN' + '\n'
    + forNonBlank(forEach(cells['filterAuthorityRole_mv'].value.split('␟'), v, if(v.split('␝')[1] != 'Verfasser/Urheber', 'A2  - ' + v.split('␝')[0].replace(/\s\(.*/,''), null)).uniques().join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['filterAuthorityRole_mv'].value.split('␟'), v, if(v.split('␝')[1] == 'Verfasser/Urheber', 'AU  - ' + v.split('␝')[0].replace(/\s\(.*/,''), null)).uniques().join('\n'), x, x + '\n', '')
    + if(or(forNonBlank(cells['callNumberBibliographic_mv'].value, v, v == 'kein Bestand', false), forNonBlank(cells['callNumberBibliographic_mv'].value, v, v == 'Nicht im Bestand des DLA', false), forNonBlank(cells['categorySub'].value, v, v.contains('Einzelne Einheit'), false)), 'AV  - ' + 'nur bibliographischer Nachweis, nicht im Bestand des DLA' + '\n', '')
    + forNonBlank(cells['publisherOriginalLocation_mv'].value.split('␟').join('; '), v, 'CY  - ' + v.replace('\n','.') + '\n', '')
    + forNonBlank(with(cells['filterDateRange_mv'].value.replace('[','').replace(']','').replace(' ','').replace('TO','␟'), x, forEach(filter(x.split('␟').uniques().sort(), f, isNumeric(f.replace('-',''))), v, 'DA  - ' + v.replace('-','/')).join('\n')),z,z + '\n','')
    + forNonBlank(forEach(cells['filterCollection_mv'].value.split('␟'), v, v).join('; '), x, 'DB  - ' + x + '\n', '')
    + forNonBlank(cells['id'].value, v, 'ID  - ' + v + '\n', '')
    + forNonBlank(cells['edition'].value, v, 'ET  - ' + v.replace('\n','.') + '\n', '')
    + if(cells['category'].value.contains('Zeitschrift'), forNonBlank(filter(cells['parent_display_mv'].value.split('␟'), v, v != '␣').join('; '), x, 'JF  - ' + x.replace('\n','.') + '\n', ''), '')
    + forNonBlank(cells['parentIssueNumber'].value, v, 'IS  - ' + v + '\n', '')
    + forNonBlank(forEach(cells['filterSubject_mv'].value.split('␟'), v, 'KW  - ' + v).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['filterLanguage_mv'].value.split('␟'), v, 'LA  - ' + v).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['filterMedium_mv'].value.split('␟'), v, 'M2  - ' + v).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['filterFormContent_mv'].value.split('␟'), v, 'M3  - ' + v).join('\n'), x, x + '\n', '')
    + forNonBlank([ forNonBlank(cells['extent'].value, z, z, null), forNonBlank(filter(cells['extentIllustrations_mv'].value.split('␟'), v, v != '␣').join(', '), z, z, null), forNonBlank(cells['extentSupplements'].value, z, z, null) ].join('; '), x, 'N1  - ' + 'Umfang: ' + x.replace('\n','.') + '\n', '')
    + forNonBlank(forEachIndex(cells['filterLocationType_mv'].value.split('␟'), i, v, 'N1  - ' + v.split('␝')[1].replace('nicht bestimmt', 'Ort') + ': ' + v.split('␝')[0]).join('\n'), x, x + '\n', '')
    + forNonBlank(forEachIndex(cells['noteFootnote_text_mv'].value.split('␟'), i, v, if(v != '␣', 'N1  - ' + if(cells['noteFootnote_type_mv'].value.split('␟')[i] == '526n', 'Rezension von: ', if(cells['noteFootnote_type_mv'].value.split('␟')[i] == '519', 'Hochschulschrift: ', '')) + v.replace('\n','.'), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['note'].value, v, 'N1  - ' + 'Bemerkungen: ' + v.replace('\n','.') + '\n', '')
    + forNonBlank(cells['publicationHistory'].value, v, 'N1  - ' + 'Erscheinungsverlauf: ' + v.replace('\n','.') + '\n', '')
    + forNonBlank(forEach(cells['noteContent_mv'].value.split('␟'), v, if(v != '␣', 'N2  - ' + v.replace('\n','.'), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['parentVolumeTotal'].value, v, 'NV  - ' + v + '\n', '')
    + forNonBlank(forEachIndex(cells['titleOther_text_mv'].value.split('␟'), i, v, forNonBlank(cells['titleOther_type_mv'].value.split('␟')[i], z, if(and(v != '␣', z == '303n'), 'OP  - ' + v.replace('\n','.'), null), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['work_display_mv'].value.split('␟'), v, if(v != '␣', 'OP  - ' + v.replace('\n','.'), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(filter(cells['publisherOriginal_text_mv'].value.split('␟'), v, v != '␣').join('; '), x, 'PB  - ' + x.replace('\n','.') + '\n', '')
    + forNonBlank(cells['dateOrigin'].value, v, 'PY  - ' + v + '\n', '')
    + forNonBlank(forEachIndex(cells['noteRemark_text_mv'].value.split('␟'), i, v, if(v != '␣', 'RN  - ' + forNonBlank(cells['noteRemark_type_mv'].value.split('␟')[i].replace('␣', ''), z, z + ': ', '') + v.replace('\n','.'), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['isbn_mv'].value.split('␟'), v, if(v != '␣', 'SN  - ' + v, null)).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['issn_mv'].value.split('␟'), v, if(v != '␣', 'SN  - ' + v, null)).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['parentIssuePage'].value, v, 'SP  - ' + v + '\n', '')
    + forNonBlank(cells['display'].value, v, 'TI  - ' + v.replace('\n','.') + '\n', '')
    + forNonBlank(forEachIndex(cells['titleOther_text_mv'].value.split('␟'), i, v, forNonBlank(cells['titleOther_type_mv'].value.split('␟')[i], z, if(and(v != '␣', z == '370n'), 'T2  - ' + v.replace('\n','.'), null), null)).join('\n'), x, x + '\n', '')
    + if(cells['category'].value.contains('Zeitschrift'), '', forNonBlank(filter(cells['parent_display_mv'].value.split('␟'), v, v != '␣').join('; '), x, 'T3  - ' + x.replace('\n','.') + '\n', ''))
    + forNonBlank(forEach(cells['website_url_mv'].value.split('␟'), v, if(v != '␣', 'UR  - ' + v, null)).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['digitalObject_hyperlink_mv'].value.split('␟'), v, if(v != '␣', 'UR  - ' + v, null)).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['id'].value, v, 'UR  - ' + 'https://www.dla-marbach.de/find/opac/id/' + v + '/' + '\n', '')
    + forNonBlank(filter(cells['parentVolume_mv'].value.split('␟'), v, v != '␣').join('; '), x, 'VL  - ' + x + '\n', '')
    + 'ER  -'
  newColumnName: exportRIS
  columnInsertIndex: 2 # hinter id und display
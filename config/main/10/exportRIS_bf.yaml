# Für den Export in Literaturverwaltungsprogramme wird ein RIS-Datensatz generiert.
- op: core/column-addition
  engineConfig:
    facets: []
    mode: row-based
  baseColumnName: id
  expression: |
    grel:
    'TY  - ' + 'GEN' + '\n'
    + forNonBlank(forEach(cells['filterAuthorityRole_mv'].value.split('␟'), v, if(v.split('␝')[1] != 'Bestandsbildner/Vorbesitzer', 'A2  - ' + v.split('␝')[0].replace(/\s\(.*/,''), null)).uniques().join('\n'), x, x + '\n', '')
    + forNonBlank(cells['accessionNumber'].value, v, 'AN  - ' + v + '\n', '')
    + forNonBlank(forEach(cells['filterAuthorityRole_mv'].value.split('␟'), v, if(v.split('␝')[1] == 'Bestandsbildner/Vorbesitzer', 'AU  - ' + v.split('␝')[0].replace(/\s\(.*/,''), null)).uniques().join('\n'), x, x + '\n', '')
    + forNonBlank(cells['mediaNumber'].value, v, 'CN  - ' + v + '\n', '')
    + forNonBlank(with(cells['filterDateRange_mv'].value.replace('[','').replace(']','').replace(' ','').replace('TO','␟'), x, forEach(filter(x.split('␟').uniques().sort(), f, isNumeric(f.replace('-',''))), v, 'DA  - ' + v.replace('-','/')).join('\n')),z,z + '\n','')
    + forNonBlank(forEach(cells['filterCollection_mv'].value.split('␟'), v, v).join('; '), x, 'DB  - ' + x + '\n', '')
    + forNonBlank(cells['id'].value, v, 'ID  - ' + v + '\n', '')
    + forNonBlank(forEach(cells['filterSubject_mv'].value.split('␟'), v, 'KW  - ' + v).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['filterFormContent_mv'].value.split('␟'), v, 'M3  - ' + v).join('\n'), x, x + '\n', '')
    + forNonBlank(forEachIndex(cells['filterLocationType_mv'].value.split('␟'), i, v, 'N1  - ' + v.split('␝')[1].replace('nicht bestimmt', 'Ort') + ': ' + v.split('␝')[0]).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['extent'].value, v, 'N1  - ' + 'Umfang: ' + v.replace('\n','. ') + '\n', '')
    + forNonBlank(cells['noteOther_mv'].value.split('␟')[0], v, 'N1  - ' + 'Übersicht: ' + v.replace('\n','. ') + '\n', '')
    + forNonBlank(forEachIndex(cells['itemization_extent_mv'].value.split('␟'), i, v, if(v != '␣', 'N1  - ' + forNonBlank(cells['itemization_status_mv'].value.split('␟')[i].replace('␣', ''), z, z + ': ', '') + v.replace('\n','. ') + forNonBlank(cells['itemization_unit_mv'].value.split('␟')[i].replace('␣', ''), z, ' ' + z, ''), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(forEachIndex(cells['order_extent_mv'].value.split('␟'), i, v, if(v != '␣', 'N1  - ' + forNonBlank(cells['order_status_mv'].value.split('␟')[i].replace('␣', ''), z, z + ': ', '') + v.replace('\n','. ') + forNonBlank(cells['order_unit_mv'].value.split('␟')[i].replace('␣', ''), z, ' ' + z, ''), null)).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['reference_text_mv'].value.split('␟')[0], v, 'N1  - ' + 'Literatur: ' + v.replace('\n','. ') + '\n', '')
    + forNonBlank(cells['content'].value, v, 'N2  - ' + v.replace('\n','. ') + '\n', '')
    + forNonBlank(cells['note'].value, v, 'RN  - ' + v.replace('\n','. ') + '\n', '')
    + forNonBlank(cells['display'].value, v, 'TI  - ' + v + '\n', '')
    + forNonBlank(forEach(cells['digitalObject_hyperlink_mv'].value.split('␟'), v, if(v != '␣', 'UR  - ' + v, null)).join('\n'), x, x + '\n', '')
    + forNonBlank(forEach(cells['website_url_mv'].value.split('␟'), v, if(v != '␣', 'UR  - ' + v, null)).join('\n'), x, x + '\n', '')
    + forNonBlank(cells['id'].value, v, 'UR  - ' + 'https://www.dla-marbach.de/find/opac/id/' + v + '/' + '\n', '')
    + 'ER  -'
  newColumnName: exportRIS
  columnInsertIndex: 2 # hinter id und display
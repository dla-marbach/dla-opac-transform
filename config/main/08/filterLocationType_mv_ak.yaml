# Facette Ort mit Typ
- op: core/column-addition
  engineConfig:
    facets: []
    mode: row-based
  baseColumnName: id
  expression: |
    grel:
    forNonBlank(
      [
        forNonBlank(
          forEach(
            cells['publisherOriginalLocation_mv'].value.split('␟'),
            v,
            forNonBlank(
              forEach(
                v.split(';'),
                x,
                x.replace('ohne Ort','').replace('[u.a.]','').replace('und andere','').trim()
              ).join('␟'),
              z,
              forEach(
                  z.split('␟'),
                  y,
                  y + '␝' + 'Erscheinungsort'
              ).join('␟'),
              null
            )
          ).join('␟'),
          x,
          x,
          null
        ),
        forNonBlank(
          forEach(
            cells['scholarlyPublication_location_mv'].value.split('␟'),
            v,
            forNonBlank(
              forEach(
                v.split(';'),
                x,
                x.replace('ohne Ort','').replace('[u.a.]','').replace('und andere','').trim()
              ).join('␟'),
              z,
              forEach(
                z.split('␟'),
                y,
                y + '␝' + 'Erscheinungsort'
              ).join('␟'),
              null
            )
          ).join('␟'),
          x,
          x,
          null
        ),
        forNonBlank(
          forEachIndex(
            cells['gndRelation_type_mv'].value.split('␟'),
            i,
            v,
            if(
              or(
                v == 'Geografikum, allgemein',
                v == 'Geografikum: Aufbewahrungsort',
                v == 'Geografikum: Fundort',
                v == 'Geografikum: Herstellungsort'
              ),
              forNonBlank(
                forEach(
                    cells['gndRelation_text_mv'].value.split('␟')[i].split(';'),
                    x,
                    x.replace('ohne Ort','').replace('[u.a.]','').replace('und andere','').trim()
                ).join('␟'),
                z,
                forEach(
                  z.split('␟'),
                  y,
                  y + if(
                    v == 'Geografikum: Aufbewahrungsort',
                    '␝' + 'Aufbewahrungsort',
                    if(
                      v == 'Geografikum: Fundort',
                      '␝' + 'Fundort',
                      if(
                        v == 'Geografikum: Herstellungsort',
                        '␝' + 'Herstellungsort',
                        '␝' + 'nicht bestimmt'
                      )
                    )
                  )
                ).join('␟'),
                null
              ),
              null
            )
          ).join('␟'),
          x,
          x,
          null
        ),
        forNonBlank(
          forEach(
            cells['subject_id_mv'].value.split('␟'),
            v,
            forNonBlank(
              v.cross('th','id')[0].cells['categorySub'].value,
              categorySub,
              if(
                categorySub == 'geographisches/ethnisches Schlagwort',
                forNonBlank(
                  forEach(
                    v.cross('th','id')[0].cells['title'].value.split(';'),
                    x,
                    x.replace('␣','').replace('ohne Ort','').replace('[u.a.]','').replace('und andere','').trim()
                  ).join('␟'),
                  z,
                  forEach(
                    z.split('␟'),
                    y,
                    y + '␝' + 'Schlagwort'
                  ).join('␟'),
                  null
                ),
                null
              ),
              null
            )
          ).join('␟'),
          x,
          x,
          null
        ),
        forNonBlank(
          cells['item_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('au','id')[0].cells['classification_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('se','id')[0].cells['subject_id_mv'].value,
                  y,
                  forEach(
                    y.split('␟'),
                    z,
                    forNonBlank(
                      z.cross('th','id')[0].cells['categorySub'].value,
                      categorySub,
                      if(
                        categorySub == 'geographisches/ethnisches Schlagwort',
                        forNonBlank(
                          forEach(
                            z.cross('th','id')[0].cells['title'].value.split(';'),
                            x,
                            x.replace('␣','').replace('ohne Ort','').replace('[u.a.]','').replace('und andere','').trim()
                          ).join('␟'),
                          z,
                          forEach(
                            z.split('␟'),
                            y,
                            y + '␝' + 'Provenienzort'
                          ).join('␟'),
                          null
                        ),
                        null
                      ),
                      null
                    )
                  ).join('␟'),
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        )
      ].uniques().join('␟'),
      x,
      forEach(
        x.split('␟'),
        v,
        with(
          if(
            v.startsWith('('),
            v.replace('(','').replace(')',''),
            if(
              v.startsWith('['),
              v.replace('[','').replace(']',''),
              v
            )
          ),
          vv,
          with(
            if(
              vv.startsWith('␝'),
              null,
              vv
            ),
            vvv,
            if(
              vvv.find('[').length() != vvv.find(']').length(),
              vvv.replace('[','').replace(']',''),
              vvv
            )
          )
        )
      ).join('␟'),
      null
    )
  newColumnName: filterLocationType_mv
  columnInsertIndex: 2

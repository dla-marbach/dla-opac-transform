# Facette Thema
# classification_id_mv -> SE:subject_id_mv -> TH:title
# classification_id_mv -> SE:classificationSubject_id_mv -> SY:title
# classification_id_mv -> SE:classificationAuthor_id_mv -> SY:title
# classification_id_mv -> SE:person_id_mv -> PE:display
# classification_id_mv -> SE:corporation_id_mv -> KS:title
# classification_id_mv -> SE:work_id_mv -> AK:title
- op: core/column-addition
  engineConfig:
    facets: []
    mode: row-based
  baseColumnName: id
  expression: |
    grel:
    forNonBlank(
      [
        forNonBlank(
          cells['classification_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('se','id')[0].cells['subject_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('th','id')[0].cells['title'].value,
                  z,
                  z,
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        ),
        forNonBlank(
          cells['classification_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('se','id')[0].cells['classificationSubject_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('sy','id')[0].cells['title'].value,
                  z,
                  z,
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        ),
        forNonBlank(
          cells['classification_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('se','id')[0].cells['classificationAuthor_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('sy','id')[0].cells['title'].value,
                  z,
                  z,
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        ),
        forNonBlank(
          cells['classification_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('se','id')[0].cells['person_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('pe','id')[0].cells['display'].value,
                  z,
                  z,
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        ),
        forNonBlank(
          cells['classification_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('se','id')[0].cells['corporation_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('ks','id')[0].cells['title'].value,
                  z,
                  z,
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        ),
        forNonBlank(
          cells['classification_id_mv'].value,
          v,
          forEach(
            v.split('␟'),
            x,
            forNonBlank(
              x.cross('se','id')[0].cells['work_id_mv'].value,
              x,
              forEach(
                x.split('␟'),
                y,
                forNonBlank(
                  y.cross('ak','id')[0].cells['title'].value,
                  z,
                  z,
                  null
                )
              ).join('␟'),
              null
            )
          ).join('␟'),
          null
        )
      ].join('␟'),
      z,
      z.split('␟').uniques().join('␟'),
      null
    )
  newColumnName: filterSubject_mv
  columnInsertIndex: 2
